{
  "name": "server",
  "version": "1.0.0",
  "description": "",
  "author": "Maksym Seleznov",
  "license": "MIT",
  "scripts": {
    "production": "NODE_ENV=production nodemon --ignore 'config_files/*' --exec babel-node server.js",
    "development": "NODE_ENV=development nodemon --ignore 'config_files/*' --exec babel-node server.js",
    "local": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=local nodemon --ignore 'config_files/*' --exec babel-node server.js",
    "remote": "NODE_ENV=remote nodemon --ignore 'config_files/*' --ignore views/ --ignore static/ --exec babel-node server.js",
    "start": "NODE_ENV=local nodemon --ignore 'config_files/*' --ignore views/ --ignore static/ --exec babel-node server.js",
    "docker-start": "NODE_ENV=docker nodemon --ignore 'config_files/*' --ignore views/ --ignore static/ --exec babel-node server.js",
    "install-step1": "yarn add @babel/core @babel/cli @babel/preset-env @babel/node nodemon eslint eslint-config-airbnb-base eslint-plugin-import semistandard --dev",
    "install-step2": "yarn add @sentry/node express express-session mongoose connect-mongo bcryptjs jsonwebtoken joi pug",
    "clean": "rm -rf build && mkdir build",
    "build-server": "babel -d ./build ./ -s --ignore 'node_modules/**/*'",
    "build": "npm run clean && npm run build-server",
    "lint": "eslint ./ --quiet",
    "debug": "node --debug ./build/index.js",
    "test": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=test LOCATION_WORKING_SET=ws_0 nyc --reporter=lcov mocha --require @babel/register --require tests/global.js --timeout 55000 'tests/**/*.spec.js' --exit",
    "test_docker": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=test_docker LOCATION_WORKING_SET=ws_0 mocha --require @babel/register --require tests/global.js --timeout 70000 'tests/**/*.spec.js' --exit",
    "test_excluded": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=test mocha --require @babel/register --timeout 15000 'tests_excluded/**/*.spec.js' --exit",
    "test_all": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=test LOCATION_WORKING_SET=ws_0 mocha --require @babel/register --timeout 15000 'test*/**/*.spec.js' --exit",
    "validate": "npm run lint; npm run test && npm outdated --depth 0",
    "find-driver-docker": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=docker nodemon --ignore 'config_files/*' --exec babel-node cronjobs.js",
    "find-driver-local": "NODE_TLS_REJECT_UNAUTHORIZED=0 NODE_ENV=local nodemon --ignore 'config_files/*' --exec babel-node cronjobs.js",
    "find-driver-development": "NODE_ENV=development nodemon --ignore 'config_files/*' --exec babel-node cronjobs.js",
    "find-driver-production": "NODE_ENV=production nodemon --ignore 'config_files/*' --exec babel-node cronjobs.js",
    "enc": "NODE_ENV=$1 babel-node ./scripts/encrypt.js",
    "decrypt": "NODE_ENV=$1 babel-node ./scripts/decrypt.js",
    "clean-load-test-data": "NODE_ENV=stage babel-node ./scripts/cleanLoadTestData.js",
    "create-vehicle-services": "NODE_ENV=$1 babel-node ./scripts/createServices.js",
    "linter": "eslint $1 --quiet",
    "create-unavailability-constants": "NODE_ENV=$1 babel-node ./scripts/createUnavailabilityReasons.js",
    "create-default-inspection-questions": "NODE_ENV=$1 babel-node ./scripts/createDefaultInspectionQuestions.js",
    "reindex-vehicle-publicid": "NODE_ENV=$1 babel-node ./scripts/reindexVehiclePublicId.js",
    "add-default-locations-working-set": "NODE_ENV=$1 babel-node ./scripts/addWorkingSetToLocations.js",
    "export-schema": "babel-node ./scripts/exportMongoDBSchema.js",
    "add-default-driver-display-name": "NODE_ENV=$1 babel-node ./scripts/addDisplayNameToDrivers.js",
    "create-matching-rules": "NODE_ENV=$1 babel-node ./scripts/createMatchingRules.js",
    "add-metric-history": "NODE_ENV=$1 babel-node ./scripts/addMetricHistory.js",
    "add-user-data-to-reports": "NODE_ENV=$1 babel-node ./scripts/addUserDataToReports.js"
  },
  "devDependencies": {
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "chai-json-schema": "^1.5.1",
    "eslint": "^5.16.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.17.2",
    "mocha": "^8.4.0",
    "nock": "^13.0.5",
    "nyc": "^15.1.0",
    "semistandard": "^13.0.1",
    "sinon": "^7.2.7",
    "supertest": "^4.0.2",
    "supertest-promised": "^1.0.0"
  },
  "dependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.4",
    "@babel/node": "^7.2.2",
    "@babel/plugin-syntax-import-assertions": "^7.20.0",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/preset-env": "^7.4.4",
    "@google/maps": "^0.5.5",
    "@hapi/joi": "^17.1.1",
    "@sendgrid/mail": "^7.3.0",
    "@sentry/node": "^5.7.1",
    "@socket.io/redis-adapter": "^8.2.1",
    "@turf/turf": "^6.5.0",
    "aws-sdk": "^2.429.0",
    "axios": "^1.7.2",
    "babel-eslint": "^10.1.0",
    "bcryptjs": "^2.4.3",
    "bluebird": "^3.5.3",
    "connect-mongo": "^2.0.3",
    "cryptr": "^4.0.2",
    "csv": "^5.3.2",
    "dd-trace": "3.39.0",
    "eslint": "^5.16.0",
    "eslint-config-airbnb-base": "^13.1.0",
    "eslint-plugin-import": "^2.17.2",
    "express": "^4.16.4",
    "express-oauth2-jwt-bearer": "^1.6.0",
    "express-session": "^1.16.1",
    "fb": "^2.0.0",
    "geopoint": "^1.0.1",
    "google-libphonenumber": "^3.2.2",
    "googleapis": "^38.0.0",
    "i18next": "^19.5.1",
    "i18next-fs-backend": "^1.0.7",
    "i18next-http-middleware": "^3.0.0",
    "ioredis": "^5.3.2",
    "joi": "^14.3.1",
    "json5": "^2.1.3",
    "jsonwebtoken": "^8.5.1",
    "jwks-rsa": "^3.1.0",
    "lodash": "^4.17.15",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.25",
    "mongoose": "^7.0.0",
    "mongoose-type-email": "^1.0.12",
    "mongoose-unique-validator": "^4.0.0",
    "mustache": "^3.1.0",
    "node-cron": "^2.0.3",
    "nodemon": "^1.19.0",
    "object-path-immutable": "^3.0.0",
    "passport": "^0.4.0",
    "passport-custom": "^1.0.5",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pug": "^2.0.3",
    "rate-limiter-flexible": "^2.1.7",
    "redis": "^4.6.10",
    "request-promise": "^4.2.4",
    "semistandard": "^13.0.1",
    "socket.io": "^4.7.2",
    "socket.io-adapter": "^2.5.2",
    "socket.io-client": "^4.7.2",
    "socket.io-parser": "^4.2.4",
    "stripe": "^8.39.0",
    "triple-beam": "^1.3.0",
    "twilio": "^3.26.0",
    "uuid": "^3.3.2",
    "winston": "^3.2.1",
    "xtend": "~2.1.2"
  }
}
